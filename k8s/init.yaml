kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: aidboxdb-green-data
  labels:
    app: aidboxdb
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: aidboxdb-green-xlog
  labels:
    app: aidboxdb
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

# ---

# apiVersion: v1
# kind: Pod
# metadata:
#   name: aidboxdb-init
#   labels:
#     app: aidboxdb
# spec:
#   restartPolicy: Never
#   volumes:
#   - name: aidboxdb-green-data
#     persistentVolumeClaim:
#       claimName: aidboxdb-green-data
#   containers:
#   - name: pg
#     volumeMounts:
#     - name: aidboxdb-green-data
#       mountPath: /data
#       subPath: pgdata
#     image: aidbox/aidboxdb:passive
#     command: ["/bin/sh", "-c", "chown postgres -R /data && su - postgres -c \"/pg/bin/initdb --data-checksums -E 'UTF-8' --lc-collate='en_US.UTF-8' --lc-ctype='en_US.UTF-8' -D /data\""]

---
apiVersion: v1
kind: ConfigMap
data:
  postgresql.conf: |
    listen_addresses = '*'
    shared_preload_libraries='pg_pathman'
    synchronous_commit = off
    shared_buffers = '1GB'
    wal_log_hints = on
    port = 5432
    hot_standby = on
    wal_level = logical
    max_replication_slots = 30
    max_wal_size = '4GB'
    archive_mode = on
    archive_command = 'test ! -f /xlog/%f && cp %p /xlog/%f'
    archive_timeout = 10min
    max_wal_size = 1GB
    max_wal_senders = 30
    wal_keep_segments = 100
  pg_hba.conf: |
    local all  all                trust
    host  all  all 127.0.0.1/32   trust
    host  all  all ::1/128        trust
    host all all all md5
    host replication postgres 0.0.0.0/0 md5
  .pgpass: |
    aidboxdb:5432:*:postgres:secret
metadata:
  name: aidboxdb-config

---
apiVersion: v1
kind: Pod
metadata:
  name: aidboxdb
  labels:
    app: aidboxdb
spec:
  volumes:
  - name: aidboxdb-green-data
    persistentVolumeClaim:
      claimName: aidboxdb-green-data
  - name: aidboxdb-green-xlog
    persistentVolumeClaim:
      claimName: aidboxdb-green-xlog
  - name: aidboxdb-config
    configMap:
      name: aidboxdb-config
  containers:
  - name: pg
    volumeMounts:
    - name: aidboxdb-config
      mountPath: /config/
    - name: aidboxdb-green-data
      mountPath: /data
      subPath: pgdata
    - name: aidboxdb-green-xlog
      mountPath: /xlog
      subPath: xlog
    image: aidbox/aidboxdb:passive
    command: ["gosu", "postgres", "postgres", "--config-file=/config/postgresql.conf", "--hba-file=/config/pg_hba.conf"]

---
kind: Service
apiVersion: v1
metadata:
  name: aidboxdb
spec:
  selector:
    app: aidboxdb
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: aidboxdb-init-db
#   labels:
#     app: aidboxdb
# spec:
#   volumes:
#   - name: aidboxdb-green-data
#     persistentVolumeClaim:
#       claimName: aidboxdb-green-data
#   - name: aidboxdb-config
#     configMap:
#       name: aidboxdb-config
#   containers:
#   - name: pg
#     restartPolicy: Never
#     volumeMounts:
#     - name: aidboxdb-config
#       mountPath: /config/
#     - name: aidboxdb-green-data
#       mountPath: /data
#       subPath: pgdata
#     image: aidbox/aidboxdb:passive
#     command:
#       - su
#       - "-"
#       - "postgres"
#       - "-c"
#       - "/pg/bin/pg_ctl -D /data  -w start && echo \"ALTER USER postgres WITH SUPERUSER PASSWORD 'secret'\" | /pg/bin/psql postgres && /pg/bin/pg_ctl -D /data -w stop"
